const jwt = require('jsonwebtoken');
const UnauthorizedError = require('../errors/unauthorized-error');

const { JWT_SECRET = 'Secret' } = process.env;

function auth(req, res, next) {
  let payload;
  try {
    console.log('–∑–∞–≥–æ–ª–æ–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ ', req.headers);
    if (!req.headers.cookie) throw new UnauthorizedError('–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è üü° 1');

    // üî¥ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–∞–∫. –•–æ—Ç—è –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–∞–∫ —Å–æ–≤–µ—Ç—É—é—Ç
    // üü° –Ω–µ —è—Å–Ω–æ –∫–∞–∫ –±—ã—Ç—å –µ—Å–ª–∏ –≤ –∫—É–∫–µ –æ–∫–∞–∂–µ—Ç—Å—è –Ω–µ jwt –∏–ª–∏ –Ω–µ —Ç–æ–ª—å–∫–æ jwt
    console.log('–∫—É–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ req.headers.cookie.jwt', req.headers.cookie.jwt);

    const token = req.headers.cookie.replace('jwt=', '');

    payload = jwt.verify(token, JWT_SECRET);
  } catch {
    return next(UnauthorizedError('–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è üü° üü° 2'));
    // üü°üü° –Ω–µ –Ω—É–∂–Ω–æ –ª–∏ new –ø–µ—Ä–µ–¥ –∫–ª–∞—Å—Å–æ–º –æ—à–∏–±–∫–∏?
  }
  req.user = payload;
  return next(); // üü° –Ω–µ —É–≤–µ—Ä–µ–Ω —á—Ç–æ return —Ç—É—Ç –Ω—É–∂–µ–Ω.
}

module.exports = auth;
